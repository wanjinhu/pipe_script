result <- vector("list", 0)  # 初始化空列表
for (i in 1:(length(list)-1)) {   # 遍历列表索引
for (j in (i+1):length(list)) { # 从i+1开始遍历
result <- c(result, list(list[[i]], list[[j]])) # 添加两元素合集
}
}
i
j
result <- vector("list", 0)  # 初始化空列表
list(list[[1]],list[[2]])
list[1]
list(list[1],list[2])
list[1]
c(list[1],list[2])
c(list[[1]],list[[2]])
list(c(list[[1]],list[[2]]),c(list[[1]],list[[3]]))
test <- list(c(list[[1]],list[[2]]),c(list[[1]],list[[3]]))
test
list <- list(1, 2, 3, 4)
result <- vector("list", 0)
n <- 0
for (i in 1:(length(list)-1)) {
for (j in (i+1):length(list)) {
n <- n + 1
result[[n]] <- c(list[[i]], list[[j]])
}
}
result
grouping()
library(ggplot2)
library(tidyr)
library(ggpubr)
setwd("F:/03-Dipro项目/11-张瑞-宏基因组-犬类/analysis-补测前/00_alpha/")
data <- read.csv("alpha.csv", header = T, check.names = F)
group <- read.table("../group.txt", sep="\t", header = T)
# 选择哪个分组方案[sample group],分析前做好选择,可以是其他方法
group_target <- data.frame(group[,c(1,3)])
names(group_target) <- c("sample","group")
dataCom<-merge(data,group_target,by.x='sample', by.y='sample')
group_info <- unique(dataCom$group)
dataCom$group <- factor(dataCom$group,
levels = group_info)
group_info
num <- length(group_info)
compare_list <- vector("list", 0)
n <- 0
for (i in 1:(num-1)) {
for (j in (i+1):num) {
n <- n + 1
compare_list[[n]] <- c(group_info[[i]],
group_info[[j]])
}
}
compare_list
colDef=c("#dc4c43","#4b8ac0","#e6811d","#228a58","#8e48d8","#6d6d6d")
p1 <-
ggplot(dataCom, aes(as.factor(group), Shannon, fill=group)) +
stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(aes(fill = group), width = 0.2, show.legend = F) +
scale_fill_manual(values=colDef) +
theme_bw() +
theme(axis.text.y = element_text(size = 12, face = "plain"),
axis.title.y = element_text(size = 16, face = "plain"),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12, face = "plain"),
axis.ticks.x = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(y = "Shannon", col = "group") +
stat_compare_means(method = "wilcox.test",
comparisons = compare_list,
label = "p.signif") +
stat_compare_means(label.y = 8)
p1
View(dataCom)
max(dataCom$Shannon)
length(compare_list)
sig_pos <- max(dataCom$Shannon) + length(compare_list)/2
max(dataCom[,1])
max(dataCom[,2])
max(dataCom[,3])
p1 <-
ggplot(dataCom, aes(as.factor(group), dataCom[,2], fill=group))
p1 <-
ggplot(dataCom, aes(as.factor(group), dataCom[,2], fill=group)) +
stat_boxplot(geom = "errorbar", width = 0.1)
P1
p1
dataCom[,2]
dataCom[["Shannon"]]
?`[[`
num
max(dataCom[["Shannon"]])
# #####################################################
# ################# 函数的demo测试 ####################
# #####################################################
## -------------------------------------------------------------------------------
## 0. 所有的demo测试数据都在此文件夹中
setwd("F:/Wanjin-Project/pipe_script/r_stat_plot/demo_data/")
## 3. 柱状图[显著性标注,针对1里面计算得到的alpha数据表]
plot_bar_1 <- function(data,group_file,target) {
"
@功能: 柱状图
@参数data: factor组成表,第一列为样本[表头必须为sample],后面几列是factor数据
@参数group_file: 分组文件,只支持1个分组方式,即第1列为样本,第2列为分组方案
@参数target: 对哪个factor作图,即参数data的列名
"
library(ggplot2)
library(tidyr)
library(ggpubr)
names(group_file) <- c("sample","group")
dataCom<-merge(data,group_file,by.x='sample', by.y='sample')
group_info <- unique(dataCom$group)
dataCom$group <- factor(dataCom$group,
levels = group_info)
# 生成两两比较的list
num <- length(group_info)
compare_list <- vector("list", 0)
n <- 0
for (i in 1:(num-1)) {
for (j in (i+1):num) {
n <- n + 1
compare_list[[n]] <- c(group_info[[i]],
group_info[[j]])
}
}
# 确定多组kw检验的p值在图上的摆放位置
sig_pos <- max(dataCom[[target]]) + length(compare_list)/2
colDef=c("#dc4c43","#4b8ac0","#e6811d","#228a58","#8e48d8","#6d6d6d")
p1 <-
ggplot(dataCom, aes(as.factor(group), dataCom[[target]], fill=group)) +
stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(aes(fill = group), width = 0.2, show.legend = F) +
scale_fill_manual(values=colDef) +
theme_bw() +
theme(axis.text.y = element_text(size = 12, face = "plain"),
axis.title.y = element_text(size = 16, face = "plain"),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12, face = "plain"),
axis.ticks.x = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(y = target, col = "group") +
stat_compare_means(method = "wilcox.test",
comparisons = compare_list,
label = "p.signif")
if (num = 2) {
## 3. 柱状图[显著性标注,针对1里面计算得到的alpha数据表]
plot_bar_1 <- function(data,group_file,target) {
"
@功能: 柱状图
@参数data: factor组成表,第一列为样本[表头必须为sample],后面几列是factor数据
@参数group_file: 分组文件,只支持1个分组方式,即第1列为样本,第2列为分组方案
@参数target: 对哪个factor作图,即参数data的列名
"
library(ggplot2)
library(tidyr)
library(ggpubr)
names(group_file) <- c("sample","group")
dataCom<-merge(data,group_file,by.x='sample', by.y='sample')
group_info <- unique(dataCom$group)
dataCom$group <- factor(dataCom$group,
levels = group_info)
# 生成两两比较的list
num <- length(group_info)
compare_list <- vector("list", 0)
n <- 0
for (i in 1:(num-1)) {
for (j in (i+1):num) {
n <- n + 1
compare_list[[n]] <- c(group_info[[i]],
group_info[[j]])
}
}
# 确定多组kw检验的p值在图上的摆放位置
sig_pos <- max(dataCom[[target]]) + length(compare_list)/2
colDef=c("#dc4c43","#4b8ac0","#e6811d","#228a58","#8e48d8","#6d6d6d")
p1 <-
ggplot(dataCom, aes(as.factor(group), dataCom[[target]], fill=group)) +
stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(aes(fill = group), width = 0.2, show.legend = F) +
scale_fill_manual(values=colDef) +
theme_bw() +
theme(axis.text.y = element_text(size = 12, face = "plain"),
axis.title.y = element_text(size = 16, face = "plain"),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12, face = "plain"),
axis.ticks.x = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(y = target, col = "group") +
stat_compare_means(method = "wilcox.test",
comparisons = compare_list,
label = "p.signif")
if (num == 2) {
return(p1)
} else {
p1 <- p1 + stat_compare_means(label.y = sig_pos)
return(p1)
}
}
## -------------------------------------------------------------------------------
## 3. 柱状图[显著性标注,针对1里面计算得到的alpha数据表]
data <- read.csv("demo_result/alpha.csv", header = T, check.names = F)
group <- read.table("group.txt", sep="\t", header = T)
# 选择哪个分组方案[sample group],分析前做好选择,可以是其他方法
group_target <- data.frame(group[,c(1,3)])
box_plot <- plot_bar_1(data = data,
group_file = group_target,
target = "Shannon")
View(data)
names(data)[1] <- c("sample")
View(data)
## 3. 柱状图[显著性标注,针对1里面计算得到的alpha数据表]
plot_bar_1 <- function(data,group_file,target) {
"
@功能: 柱状图
@参数data: factor组成表,第一列为样本,后面几列是factor数据
@参数group_file: 分组文件,只支持1个分组方式,即第1列为样本,第2列为分组方案
@参数target: 对哪个factor作图,即参数data的列名
"
library(ggplot2)
library(tidyr)
library(ggpubr)
names(data)[1] <- c("sample")
names(group_file) <- c("sample","group")
dataCom<-merge(data,group_file,by.x='sample', by.y='sample')
group_info <- unique(dataCom$group)
dataCom$group <- factor(dataCom$group,
levels = group_info)
# 生成两两比较的list
num <- length(group_info)
compare_list <- vector("list", 0)
n <- 0
for (i in 1:(num-1)) {
for (j in (i+1):num) {
n <- n + 1
compare_list[[n]] <- c(group_info[[i]],
group_info[[j]])
}
}
# 确定多组kw检验的p值在图上的摆放位置
sig_pos <- max(dataCom[[target]]) + length(compare_list)/2
colDef=c("#dc4c43","#4b8ac0","#e6811d","#228a58","#8e48d8","#6d6d6d")
p1 <-
ggplot(dataCom, aes(as.factor(group), dataCom[[target]], fill=group)) +
stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(aes(fill = group), width = 0.2, show.legend = F) +
scale_fill_manual(values=colDef) +
theme_bw() +
theme(axis.text.y = element_text(size = 12, face = "plain"),
axis.title.y = element_text(size = 16, face = "plain"),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12, face = "plain"),
axis.ticks.x = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(y = target, col = "group") +
stat_compare_means(method = "wilcox.test",
comparisons = compare_list,
label = "p.signif")
if (num == 2) {
return(p1)
} else {
p1 <- p1 + stat_compare_means(label.y = sig_pos)
return(p1)
}
}
## -------------------------------------------------------------------------------
## 3. 柱状图[显著性标注,针对1里面计算得到的alpha数据表]
data <- read.csv("demo_result/alpha.csv", header = T, check.names = F)
group <- read.table("group.txt", sep="\t", header = T)
# 选择哪个分组方案[sample group],分析前做好选择,可以是其他方法
group_target <- data.frame(group[,c(1,3)])
box_plot <- plot_bar_1(data = data,
group_file = group_target,
target = "Shannon")
box_plot
box_plot <- plot_bar_1(data = data,
group_file = group_target,
target = "Simpson")
box_plot
## 3. 柱状图[显著性标注,针对1里面计算得到的alpha数据表]
plot_bar_1 <- function(data,group_file,target) {
"
@功能: 柱状图
@参数data: factor组成表,第一列为样本,后面几列是factor数据
@参数group_file: 分组文件,只支持1个分组方式,即第1列为样本,第2列为分组方案
@参数target: 对哪个factor作图,即参数data的列名
"
library(ggplot2)
library(tidyr)
library(ggpubr)
names(data)[1] <- c("sample")
names(group_file) <- c("sample","group")
dataCom<-merge(data,group_file,by.x='sample', by.y='sample')
group_info <- unique(dataCom$group)
dataCom$group <- factor(dataCom$group,
levels = group_info)
# 生成两两比较的list
num <- length(group_info)
compare_list <- vector("list", 0)
n <- 0
for (i in 1:(num-1)) {
for (j in (i+1):num) {
n <- n + 1
compare_list[[n]] <- c(group_info[[i]],
group_info[[j]])
}
}
# 确定多组kw检验的p值在图上的摆放位置
sig_pos <- max(dataCom[[target]]) + length(compare_list)/2
colDef=c("#dc4c43","#4b8ac0","#e6811d","#228a58","#8e48d8","#6d6d6d")
p1 <-
ggplot(dataCom, aes(as.factor(group), dataCom[[target]], fill=group)) +
stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(aes(fill = group), width = 0.2, show.legend = F) +
scale_fill_manual(values=colDef) +
theme_bw() +
theme(axis.text.y = element_text(size = 12, face = "plain"),
axis.title.y = element_text(size = 16, face = "plain"),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12, face = "plain"),
axis.ticks.x = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(y = target, col = "group") +
stat_compare_means(method = "wilcox.test",
comparisons = compare_list,
label = "p.signif")
if (num == 2) {
return(p1)
} else {
#p1 <- p1 + stat_compare_means(label.y = sig_pos)
p1 <- p1 + stat_compare_means()
return(p1)
}
}
box_plot <- plot_bar_1(data = data,
group_file = group_target,
target = "Simpson")
box_plot
max(data[["Simpson"]])
bpx_plot
box_plot
ylim(box_plot)
box_plot$labels
ggplot2:::y_range(box_plot)
ggplot2:::ylim(box_plot)
ylim(box_plot)
box_plot <- plot_bar_1(data = data,
group_file = group_target,
target = "Shannon")
box_plot
## 3. 柱状图[显著性标注,针对1里面计算得到的alpha数据表]
plot_bar_1 <- function(data,group_file,target,ymax = 10) {
"
@功能: 柱状图
@参数data: factor组成表,第一列为样本,后面几列是factor数据
@参数group_file: 分组文件,只支持1个分组方式,即第1列为样本,第2列为分组方案
@参数target: 对哪个factor作图,即参数data的列名
@参数ymax: 绘制多组时,有kw检验结果,放置图上垂直的位置
"
library(ggplot2)
library(tidyr)
library(ggpubr)
names(data)[1] <- c("sample")
names(group_file) <- c("sample","group")
dataCom<-merge(data,group_file,by.x='sample', by.y='sample')
group_info <- unique(dataCom$group)
dataCom$group <- factor(dataCom$group,
levels = group_info)
# 生成两两比较的list
num <- length(group_info)
compare_list <- vector("list", 0)
n <- 0
for (i in 1:(num-1)) {
for (j in (i+1):num) {
n <- n + 1
compare_list[[n]] <- c(group_info[[i]],
group_info[[j]])
}
}
# 确定多组kw检验的p值在图上的摆放位置
colDef=c("#dc4c43","#4b8ac0","#e6811d","#228a58","#8e48d8","#6d6d6d")
p1 <-
ggplot(dataCom, aes(as.factor(group), dataCom[[target]], fill=group)) +
stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(aes(fill = group), width = 0.2, show.legend = F) +
scale_fill_manual(values=colDef) +
theme_bw() +
theme(axis.text.y = element_text(size = 12, face = "plain"),
axis.title.y = element_text(size = 16, face = "plain"),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12, face = "plain"),
axis.ticks.x = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(y = target, col = "group") +
stat_compare_means(method = "wilcox.test",
comparisons = compare_list,
label = "p.signif")
if (num == 2) {
return(p1)
} else {
p1 <- p1 + stat_compare_means(label.y = ymax)
return(p1)
}
}
## 3. 柱状图[显著性标注,针对1里面计算得到的alpha数据表]
plot_bar_1 <- function(data,group_file,target,ymax = 10) {
"
@功能: 柱状图
@参数data: factor组成表,第一列为样本,后面几列是factor数据
@参数group_file: 分组文件,只支持1个分组方式,即第1列为样本,第2列为分组方案
@参数target: 对哪个factor作图,即参数data的列名
@参数ymax: 绘制多组时,有kw检验结果,放置图上垂直的位置
"
library(ggplot2)
library(tidyr)
library(ggpubr)
names(data)[1] <- c("sample")
names(group_file) <- c("sample","group")
dataCom<-merge(data,group_file,by.x='sample', by.y='sample')
group_info <- unique(dataCom$group)
dataCom$group <- factor(dataCom$group,
levels = group_info)
# 生成两两比较的list
num <- length(group_info)
compare_list <- vector("list", 0)
n <- 0
for (i in 1:(num-1)) {
for (j in (i+1):num) {
n <- n + 1
compare_list[[n]] <- c(group_info[[i]],
group_info[[j]])
}
}
# 确定多组kw检验的p值在图上的摆放位置
colDef=c("#dc4c43","#4b8ac0","#e6811d","#228a58","#8e48d8","#6d6d6d")
p1 <-
ggplot(dataCom, aes(as.factor(group), dataCom[[target]], fill=group)) +
stat_boxplot(geom = "errorbar", width = 0.1) +
geom_boxplot(aes(fill = group), width = 0.2, show.legend = F) +
scale_fill_manual(values=colDef) +
theme_bw() +
theme(axis.text.y = element_text(size = 12, face = "plain"),
axis.title.y = element_text(size = 16, face = "plain"),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12, face = "plain"),
axis.ticks.x = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black", size = 1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(y = target, col = "group") +
stat_compare_means(method = "wilcox.test",
comparisons = compare_list,
label = "p.signif")
if (num == 2) {
return(p1)
} else {
p1 <- p1 + stat_compare_means(label.y = ymax)
return(p1)
}
}
box_plot <- plot_bar_1(data = data,
group_file = group_target,
target = "Shannon",
ymax = 10)
box_plot
## -------------------------------------------------------------------------------
## 2. beta_pcoa绘图
data <- read.delim("06_metaphlan_species.txt",
sep = "\t",
header = T,
check.names = FALSE,
row.names = 1)
box_plot
box_plot <- plot_bar_1(data = data,
group_file = group_target,
target = "Shannon",
ymax = 9)
box_plot
## -------------------------------------------------------------------------------
## 3. 柱状图[显著性标注,针对1里面计算得到的alpha数据表]
data <- read.csv("demo_result/alpha.csv", header = T, check.names = F)
group <- read.table("group.txt", sep="\t", header = T)
# 选择哪个分组方案[sample group],分析前做好选择,可以是其他方法
group_target <- data.frame(group[,c(1,3)])
box_plot <- plot_bar_1(data = data,
group_file = group_target,
target = "Shannon",
ymax = 9)
box_plot
box_plot <- plot_bar_1(data = data,
group_file = group_target,
target = "Shannon",
ymax = 8)
box_plot
